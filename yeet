
struct Channel{
  public:
  int inPin;
  int inVal;
  int outPin;
  int outVal;
  
};

Channel throttle = {3,0,9,0};
Channel steering = {5,0,10,0};
Channel aux = {6,0,11,0};

void setup() 
{
  pinMode(throttle.inPin, INPUT);
  pinMode(throttle.outPin, OUTPUT);
  pinMode(steering.inPin, INPUT);
  pinMode(steering.outPin, OUTPUT);
  pinMode(aux.inPin, INPUT);
  pinMode(aux.outPin, OUTPUT);
  Serial.begin(9600);
  attachInterrupt(digitalPinToInterrupt(throttle.inPin), throttleActive, RISING);
  attachInterrupt(digitalPinToInterrupt(steering.inPin), steeringActive, RISING);
  attachInterrupt(digitalPinToInterrupt(aux.inPin), auxActive, RISING);

}

void loop() 
{

}

void throttleActive()
{
  channelSend(throttle.outPin,channelRecieve(&throttle));
  throttle.inVal = channelRecieve(&throttle);
  Serial.print("Throttle: ");
  Serial.println(throttle.inVal);
}

void steeringActive()
{
  channelSend(steering.outPin,channelRecieve(&steering));
  steering.inVal = channelRecieve(&steering);
  Serial.print(" Steering: ");
  Serial.println(steering.inVal);
}

void auxActive()
{
  channelSend(aux.outPin,channelRecieve(&aux));
  aux.inVal = channelRecieve(&aux);
  Serial.print(" Aux: ");
  Serial.println(aux.inVal);
}

void channelSend(int sendPin, int sendVal)
{
  digitalWrite(sendPin, HIGH);
  delayMicroseconds(sendVal);
  digitalWrite(sendPin, LOW);
}

int channelRecieve(struct Channel *chan)
{
    return pulseIn(chan->inPin, HIGH);
}
